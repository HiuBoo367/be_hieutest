//////////////////////////////////////////////////////////////
// <auto-generated>This code was generated by LLBLGen Pro 5.11.</auto-generated>
//////////////////////////////////////////////////////////////
// Code is generated on: 
// Code is generated using templates: SD.TemplateBindings.SharedTemplates
// Templates vendor: Solutions Design.
//////////////////////////////////////////////////////////////
using System;
using System.ComponentModel;
using System.Collections.Generic;
using System.Runtime.Serialization;
using System.Xml.Serialization;
using App.Xuatnhapcanh.Dal.HelperClasses;
using App.Xuatnhapcanh.Dal.FactoryClasses;
using App.Xuatnhapcanh.Dal.RelationClasses;

using SD.LLBLGen.Pro.ORMSupportClasses;

namespace App.Xuatnhapcanh.Dal.EntityClasses
{
	// __LLBLGENPRO_USER_CODE_REGION_START AdditionalNamespaces
	// __LLBLGENPRO_USER_CODE_REGION_END

	/// <summary>Entity class which represents the entity 'CustomsUserAnswer'.<br/><br/></summary>
	[Serializable]
	public partial class CustomsUserAnswerEntity : CommonEntityBase
		// __LLBLGENPRO_USER_CODE_REGION_START AdditionalInterfaces
		// __LLBLGENPRO_USER_CODE_REGION_END
	
	{
		private CustomsAnswerOptionEntity _customsAnswerOption;
		private CustomsImmigrationEntity _customsImmigration;
		private CustomsQuestionEntity _customsQuestion;
		// __LLBLGENPRO_USER_CODE_REGION_START PrivateMembers
		// __LLBLGENPRO_USER_CODE_REGION_END

		private static CustomsUserAnswerEntityStaticMetaData _staticMetaData = new CustomsUserAnswerEntityStaticMetaData();
		private static CustomsUserAnswerRelations _relationsFactory = new CustomsUserAnswerRelations();

		/// <summary>All names of fields mapped onto a relation. Usable for in-memory filtering</summary>
		public static partial class MemberNames
		{
			/// <summary>Member name CustomsAnswerOption</summary>
			public static readonly string CustomsAnswerOption = "CustomsAnswerOption";
			/// <summary>Member name CustomsImmigration</summary>
			public static readonly string CustomsImmigration = "CustomsImmigration";
			/// <summary>Member name CustomsQuestion</summary>
			public static readonly string CustomsQuestion = "CustomsQuestion";
		}

		/// <summary>Static meta-data storage for navigator related information</summary>
		protected class CustomsUserAnswerEntityStaticMetaData : EntityStaticMetaDataBase
		{
			public CustomsUserAnswerEntityStaticMetaData()
			{
				SetEntityCoreInfo("CustomsUserAnswerEntity", InheritanceHierarchyType.None, false, (int)App.Xuatnhapcanh.Dal.EntityType.CustomsUserAnswerEntity, typeof(CustomsUserAnswerEntity), typeof(CustomsUserAnswerEntityFactory), false);
				AddNavigatorMetaData<CustomsUserAnswerEntity, CustomsAnswerOptionEntity>("CustomsAnswerOption", "CustomsUserAnswers", (a, b) => a._customsAnswerOption = b, a => a._customsAnswerOption, (a, b) => a.CustomsAnswerOption = b, App.Xuatnhapcanh.Dal.RelationClasses.StaticCustomsUserAnswerRelations.CustomsAnswerOptionEntityUsingChoiceIdStatic, ()=>new CustomsUserAnswerRelations().CustomsAnswerOptionEntityUsingChoiceId, null, new int[] { (int)CustomsUserAnswerFieldIndex.ChoiceId }, null, true, (int)App.Xuatnhapcanh.Dal.EntityType.CustomsAnswerOptionEntity);
				AddNavigatorMetaData<CustomsUserAnswerEntity, CustomsImmigrationEntity>("CustomsImmigration", "CustomsUserAnswers", (a, b) => a._customsImmigration = b, a => a._customsImmigration, (a, b) => a.CustomsImmigration = b, App.Xuatnhapcanh.Dal.RelationClasses.StaticCustomsUserAnswerRelations.CustomsImmigrationEntityUsingImmigrationFormIdStatic, ()=>new CustomsUserAnswerRelations().CustomsImmigrationEntityUsingImmigrationFormId, null, new int[] { (int)CustomsUserAnswerFieldIndex.ImmigrationFormId }, null, true, (int)App.Xuatnhapcanh.Dal.EntityType.CustomsImmigrationEntity);
				AddNavigatorMetaData<CustomsUserAnswerEntity, CustomsQuestionEntity>("CustomsQuestion", "CustomsUserAnswers", (a, b) => a._customsQuestion = b, a => a._customsQuestion, (a, b) => a.CustomsQuestion = b, App.Xuatnhapcanh.Dal.RelationClasses.StaticCustomsUserAnswerRelations.CustomsQuestionEntityUsingQuestionIdStatic, ()=>new CustomsUserAnswerRelations().CustomsQuestionEntityUsingQuestionId, null, new int[] { (int)CustomsUserAnswerFieldIndex.QuestionId }, null, true, (int)App.Xuatnhapcanh.Dal.EntityType.CustomsQuestionEntity);
			}
		}

		/// <summary>Static ctor</summary>
		static CustomsUserAnswerEntity()
		{
		}

		/// <summary> CTor</summary>
		public CustomsUserAnswerEntity()
		{
			InitClassEmpty(null, null);
		}

		/// <summary> CTor</summary>
		/// <param name="fields">Fields object to set as the fields for this entity.</param>
		public CustomsUserAnswerEntity(IEntityFields2 fields)
		{
			InitClassEmpty(null, fields);
		}

		/// <summary> CTor</summary>
		/// <param name="validator">The custom validator object for this CustomsUserAnswerEntity</param>
		public CustomsUserAnswerEntity(IValidator validator)
		{
			InitClassEmpty(validator, null);
		}

		/// <summary> CTor</summary>
		/// <param name="answerId">PK value for CustomsUserAnswer which data should be fetched into this CustomsUserAnswer object</param>
		public CustomsUserAnswerEntity(System.String answerId) : this(answerId, null)
		{
		}

		/// <summary> CTor</summary>
		/// <param name="answerId">PK value for CustomsUserAnswer which data should be fetched into this CustomsUserAnswer object</param>
		/// <param name="validator">The custom validator object for this CustomsUserAnswerEntity</param>
		public CustomsUserAnswerEntity(System.String answerId, IValidator validator)
		{
			InitClassEmpty(validator, null);
			this.AnswerId = answerId;
		}

		/// <summary>Private CTor for deserialization</summary>
		/// <param name="info"></param>
		/// <param name="context"></param>
		protected CustomsUserAnswerEntity(SerializationInfo info, StreamingContext context) : base(info, context)
		{
			// __LLBLGENPRO_USER_CODE_REGION_START DeserializationConstructor
			// __LLBLGENPRO_USER_CODE_REGION_END
		}

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entity of type 'CustomsAnswerOption' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCustomsAnswerOption() { return CreateRelationInfoForNavigator("CustomsAnswerOption"); }

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entity of type 'CustomsImmigration' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCustomsImmigration() { return CreateRelationInfoForNavigator("CustomsImmigration"); }

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entity of type 'CustomsQuestion' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCustomsQuestion() { return CreateRelationInfoForNavigator("CustomsQuestion"); }
		
		/// <inheritdoc/>
		protected override EntityStaticMetaDataBase GetEntityStaticMetaData() {	return _staticMetaData; }

		/// <summary>Initializes the class members</summary>
		private void InitClassMembers()
		{
			PerformDependencyInjection();
			// __LLBLGENPRO_USER_CODE_REGION_START InitClassMembers
			// __LLBLGENPRO_USER_CODE_REGION_END

			OnInitClassMembersComplete();
		}

		/// <summary>Initializes the class with empty data, as if it is a new Entity.</summary>
		/// <param name="validator">The validator object for this CustomsUserAnswerEntity</param>
		/// <param name="fields">Fields of this entity</param>
		private void InitClassEmpty(IValidator validator, IEntityFields2 fields)
		{
			OnInitializing();
			this.Fields = fields ?? CreateFields();
			this.Validator = validator;
			InitClassMembers();
			// __LLBLGENPRO_USER_CODE_REGION_START InitClassEmpty
			// __LLBLGENPRO_USER_CODE_REGION_END


			OnInitialized();
		}

		/// <summary>The relations object holding all relations of this entity with other entity classes.</summary>
		public static CustomsUserAnswerRelations Relations { get { return _relationsFactory; } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CustomsAnswerOption' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCustomsAnswerOption { get { return _staticMetaData.GetPrefetchPathElement("CustomsAnswerOption", CommonEntityBase.CreateEntityCollection<CustomsAnswerOptionEntity>()); } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CustomsImmigration' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCustomsImmigration { get { return _staticMetaData.GetPrefetchPathElement("CustomsImmigration", CommonEntityBase.CreateEntityCollection<CustomsImmigrationEntity>()); } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CustomsQuestion' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCustomsQuestion { get { return _staticMetaData.GetPrefetchPathElement("CustomsQuestion", CommonEntityBase.CreateEntityCollection<CustomsQuestionEntity>()); } }

		/// <summary>The AnswerId property of the Entity CustomsUserAnswer<br/><br/></summary>
		/// <remarks>Mapped on  table field: "customs_user_answer"."answer_id".<br/>Table field type characteristics (type, precision, scale, length): Varchar, 0, 0, 40.<br/>Table field behavior characteristics (is nullable, is PK, is identity): false, true, false</remarks>
		public virtual System.String AnswerId
		{
			get { return (System.String)GetValue((int)CustomsUserAnswerFieldIndex.AnswerId, true); }
			set { SetValue((int)CustomsUserAnswerFieldIndex.AnswerId, value); }
		}

		/// <summary>The AnswerText property of the Entity CustomsUserAnswer<br/><br/></summary>
		/// <remarks>Mapped on  table field: "customs_user_answer"."answer_text".<br/>Table field type characteristics (type, precision, scale, length): Varchar, 0, 0, 1000.<br/>Table field behavior characteristics (is nullable, is PK, is identity): true, false, false</remarks>
		public virtual System.String AnswerText
		{
			get { return (System.String)GetValue((int)CustomsUserAnswerFieldIndex.AnswerText, true); }
			set { SetValue((int)CustomsUserAnswerFieldIndex.AnswerText, value); }
		}

		/// <summary>The ChoiceId property of the Entity CustomsUserAnswer<br/><br/></summary>
		/// <remarks>Mapped on  table field: "customs_user_answer"."choice_id".<br/>Table field type characteristics (type, precision, scale, length): Varchar, 0, 0, 40.<br/>Table field behavior characteristics (is nullable, is PK, is identity): true, false, false</remarks>
		public virtual System.String ChoiceId
		{
			get { return (System.String)GetValue((int)CustomsUserAnswerFieldIndex.ChoiceId, true); }
			set { SetValue((int)CustomsUserAnswerFieldIndex.ChoiceId, value); }
		}

		/// <summary>The CreatedAt property of the Entity CustomsUserAnswer<br/><br/></summary>
		/// <remarks>Mapped on  table field: "customs_user_answer"."created_at".<br/>Table field type characteristics (type, precision, scale, length): Timestamp, 0, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): true, false, false</remarks>
		public virtual Nullable<System.DateTime> CreatedAt
		{
			get { return (Nullable<System.DateTime>)GetValue((int)CustomsUserAnswerFieldIndex.CreatedAt, false); }
			set { SetValue((int)CustomsUserAnswerFieldIndex.CreatedAt, value); }
		}

		/// <summary>The ImmigrationFormId property of the Entity CustomsUserAnswer<br/><br/></summary>
		/// <remarks>Mapped on  table field: "customs_user_answer"."immigration_form_id".<br/>Table field type characteristics (type, precision, scale, length): Varchar, 0, 0, 40.<br/>Table field behavior characteristics (is nullable, is PK, is identity): false, false, false</remarks>
		public virtual System.String ImmigrationFormId
		{
			get { return (System.String)GetValue((int)CustomsUserAnswerFieldIndex.ImmigrationFormId, true); }
			set { SetValue((int)CustomsUserAnswerFieldIndex.ImmigrationFormId, value); }
		}

		/// <summary>The QuestionId property of the Entity CustomsUserAnswer<br/><br/></summary>
		/// <remarks>Mapped on  table field: "customs_user_answer"."question_id".<br/>Table field type characteristics (type, precision, scale, length): Varchar, 0, 0, 40.<br/>Table field behavior characteristics (is nullable, is PK, is identity): true, false, false</remarks>
		public virtual System.String QuestionId
		{
			get { return (System.String)GetValue((int)CustomsUserAnswerFieldIndex.QuestionId, true); }
			set { SetValue((int)CustomsUserAnswerFieldIndex.QuestionId, value); }
		}

		/// <summary>The UserId property of the Entity CustomsUserAnswer<br/><br/></summary>
		/// <remarks>Mapped on  table field: "customs_user_answer"."user_id".<br/>Table field type characteristics (type, precision, scale, length): Varchar, 0, 0, 40.<br/>Table field behavior characteristics (is nullable, is PK, is identity): false, false, false</remarks>
		public virtual System.String UserId
		{
			get { return (System.String)GetValue((int)CustomsUserAnswerFieldIndex.UserId, true); }
			set { SetValue((int)CustomsUserAnswerFieldIndex.UserId, value); }
		}

		/// <summary>Gets / sets related entity of type 'CustomsAnswerOptionEntity' which has to be set using a fetch action earlier. If no related entity is set for this property, null is returned..<br/><br/></summary>
		[Browsable(false)]
		public virtual CustomsAnswerOptionEntity CustomsAnswerOption
		{
			get { return _customsAnswerOption; }
			set { SetSingleRelatedEntityNavigator(value, "CustomsAnswerOption"); }
		}

		/// <summary>Gets / sets related entity of type 'CustomsImmigrationEntity' which has to be set using a fetch action earlier. If no related entity is set for this property, null is returned..<br/><br/></summary>
		[Browsable(false)]
		public virtual CustomsImmigrationEntity CustomsImmigration
		{
			get { return _customsImmigration; }
			set { SetSingleRelatedEntityNavigator(value, "CustomsImmigration"); }
		}

		/// <summary>Gets / sets related entity of type 'CustomsQuestionEntity' which has to be set using a fetch action earlier. If no related entity is set for this property, null is returned..<br/><br/></summary>
		[Browsable(false)]
		public virtual CustomsQuestionEntity CustomsQuestion
		{
			get { return _customsQuestion; }
			set { SetSingleRelatedEntityNavigator(value, "CustomsQuestion"); }
		}
		// __LLBLGENPRO_USER_CODE_REGION_START CustomEntityCode
		// __LLBLGENPRO_USER_CODE_REGION_END


	}
}

namespace App.Xuatnhapcanh.Dal
{
	public enum CustomsUserAnswerFieldIndex
	{
		///<summary>AnswerId. </summary>
		AnswerId,
		///<summary>AnswerText. </summary>
		AnswerText,
		///<summary>ChoiceId. </summary>
		ChoiceId,
		///<summary>CreatedAt. </summary>
		CreatedAt,
		///<summary>ImmigrationFormId. </summary>
		ImmigrationFormId,
		///<summary>QuestionId. </summary>
		QuestionId,
		///<summary>UserId. </summary>
		UserId,
		/// <summary></summary>
		AmountOfFields
	}
}

namespace App.Xuatnhapcanh.Dal.RelationClasses
{
	/// <summary>Implements the relations factory for the entity: CustomsUserAnswer. </summary>
	public partial class CustomsUserAnswerRelations: RelationFactory
	{

		/// <summary>Returns a new IEntityRelation object, between CustomsUserAnswerEntity and CustomsAnswerOptionEntity over the m:1 relation they have, using the relation between the fields: CustomsUserAnswer.ChoiceId - CustomsAnswerOption.Id</summary>
		public virtual IEntityRelation CustomsAnswerOptionEntityUsingChoiceId
		{
			get	{ return ModelInfoProviderSingleton.GetInstance().CreateRelation(RelationType.ManyToOne, "CustomsAnswerOption", false, new[] { CustomsAnswerOptionFields.Id, CustomsUserAnswerFields.ChoiceId }); }
		}

		/// <summary>Returns a new IEntityRelation object, between CustomsUserAnswerEntity and CustomsImmigrationEntity over the m:1 relation they have, using the relation between the fields: CustomsUserAnswer.ImmigrationFormId - CustomsImmigration.Id</summary>
		public virtual IEntityRelation CustomsImmigrationEntityUsingImmigrationFormId
		{
			get	{ return ModelInfoProviderSingleton.GetInstance().CreateRelation(RelationType.ManyToOne, "CustomsImmigration", false, new[] { CustomsImmigrationFields.Id, CustomsUserAnswerFields.ImmigrationFormId }); }
		}

		/// <summary>Returns a new IEntityRelation object, between CustomsUserAnswerEntity and CustomsQuestionEntity over the m:1 relation they have, using the relation between the fields: CustomsUserAnswer.QuestionId - CustomsQuestion.Id</summary>
		public virtual IEntityRelation CustomsQuestionEntityUsingQuestionId
		{
			get	{ return ModelInfoProviderSingleton.GetInstance().CreateRelation(RelationType.ManyToOne, "CustomsQuestion", false, new[] { CustomsQuestionFields.Id, CustomsUserAnswerFields.QuestionId }); }
		}

	}
	
	/// <summary>Static class which is used for providing relationship instances which are re-used internally for syncing</summary>
	internal static class StaticCustomsUserAnswerRelations
	{
		internal static readonly IEntityRelation CustomsAnswerOptionEntityUsingChoiceIdStatic = new CustomsUserAnswerRelations().CustomsAnswerOptionEntityUsingChoiceId;
		internal static readonly IEntityRelation CustomsImmigrationEntityUsingImmigrationFormIdStatic = new CustomsUserAnswerRelations().CustomsImmigrationEntityUsingImmigrationFormId;
		internal static readonly IEntityRelation CustomsQuestionEntityUsingQuestionIdStatic = new CustomsUserAnswerRelations().CustomsQuestionEntityUsingQuestionId;

		/// <summary>CTor</summary>
		static StaticCustomsUserAnswerRelations() { }
	}
}
