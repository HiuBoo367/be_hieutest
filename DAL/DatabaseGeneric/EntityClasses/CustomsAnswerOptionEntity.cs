//////////////////////////////////////////////////////////////
// <auto-generated>This code was generated by LLBLGen Pro 5.11.</auto-generated>
//////////////////////////////////////////////////////////////
// Code is generated on: 
// Code is generated using templates: SD.TemplateBindings.SharedTemplates
// Templates vendor: Solutions Design.
//////////////////////////////////////////////////////////////
using System;
using System.ComponentModel;
using System.Collections.Generic;
using System.Runtime.Serialization;
using System.Xml.Serialization;
using App.Xuatnhapcanh.Dal.HelperClasses;
using App.Xuatnhapcanh.Dal.FactoryClasses;
using App.Xuatnhapcanh.Dal.RelationClasses;

using SD.LLBLGen.Pro.ORMSupportClasses;

namespace App.Xuatnhapcanh.Dal.EntityClasses
{
	// __LLBLGENPRO_USER_CODE_REGION_START AdditionalNamespaces
	// __LLBLGENPRO_USER_CODE_REGION_END

	/// <summary>Entity class which represents the entity 'CustomsAnswerOption'.<br/><br/></summary>
	[Serializable]
	public partial class CustomsAnswerOptionEntity : CommonEntityBase
		// __LLBLGENPRO_USER_CODE_REGION_START AdditionalInterfaces
		// __LLBLGENPRO_USER_CODE_REGION_END
	
	{
		private EntityCollection<CustomsUserAnswerEntity> _customsUserAnswers;
		private CustomsQuestionEntity _customsQuestion;
		// __LLBLGENPRO_USER_CODE_REGION_START PrivateMembers
		// __LLBLGENPRO_USER_CODE_REGION_END

		private static CustomsAnswerOptionEntityStaticMetaData _staticMetaData = new CustomsAnswerOptionEntityStaticMetaData();
		private static CustomsAnswerOptionRelations _relationsFactory = new CustomsAnswerOptionRelations();

		/// <summary>All names of fields mapped onto a relation. Usable for in-memory filtering</summary>
		public static partial class MemberNames
		{
			/// <summary>Member name CustomsQuestion</summary>
			public static readonly string CustomsQuestion = "CustomsQuestion";
			/// <summary>Member name CustomsUserAnswers</summary>
			public static readonly string CustomsUserAnswers = "CustomsUserAnswers";
		}

		/// <summary>Static meta-data storage for navigator related information</summary>
		protected class CustomsAnswerOptionEntityStaticMetaData : EntityStaticMetaDataBase
		{
			public CustomsAnswerOptionEntityStaticMetaData()
			{
				SetEntityCoreInfo("CustomsAnswerOptionEntity", InheritanceHierarchyType.None, false, (int)App.Xuatnhapcanh.Dal.EntityType.CustomsAnswerOptionEntity, typeof(CustomsAnswerOptionEntity), typeof(CustomsAnswerOptionEntityFactory), false);
				AddNavigatorMetaData<CustomsAnswerOptionEntity, EntityCollection<CustomsUserAnswerEntity>>("CustomsUserAnswers", a => a._customsUserAnswers, (a, b) => a._customsUserAnswers = b, a => a.CustomsUserAnswers, () => new CustomsAnswerOptionRelations().CustomsUserAnswerEntityUsingChoiceId, typeof(CustomsUserAnswerEntity), (int)App.Xuatnhapcanh.Dal.EntityType.CustomsUserAnswerEntity);
				AddNavigatorMetaData<CustomsAnswerOptionEntity, CustomsQuestionEntity>("CustomsQuestion", "CustomsAnswerOptions", (a, b) => a._customsQuestion = b, a => a._customsQuestion, (a, b) => a.CustomsQuestion = b, App.Xuatnhapcanh.Dal.RelationClasses.StaticCustomsAnswerOptionRelations.CustomsQuestionEntityUsingQuestionIdStatic, ()=>new CustomsAnswerOptionRelations().CustomsQuestionEntityUsingQuestionId, null, new int[] { (int)CustomsAnswerOptionFieldIndex.QuestionId }, null, true, (int)App.Xuatnhapcanh.Dal.EntityType.CustomsQuestionEntity);
			}
		}

		/// <summary>Static ctor</summary>
		static CustomsAnswerOptionEntity()
		{
		}

		/// <summary> CTor</summary>
		public CustomsAnswerOptionEntity()
		{
			InitClassEmpty(null, null);
		}

		/// <summary> CTor</summary>
		/// <param name="fields">Fields object to set as the fields for this entity.</param>
		public CustomsAnswerOptionEntity(IEntityFields2 fields)
		{
			InitClassEmpty(null, fields);
		}

		/// <summary> CTor</summary>
		/// <param name="validator">The custom validator object for this CustomsAnswerOptionEntity</param>
		public CustomsAnswerOptionEntity(IValidator validator)
		{
			InitClassEmpty(validator, null);
		}

		/// <summary> CTor</summary>
		/// <param name="id">PK value for CustomsAnswerOption which data should be fetched into this CustomsAnswerOption object</param>
		public CustomsAnswerOptionEntity(System.String id) : this(id, null)
		{
		}

		/// <summary> CTor</summary>
		/// <param name="id">PK value for CustomsAnswerOption which data should be fetched into this CustomsAnswerOption object</param>
		/// <param name="validator">The custom validator object for this CustomsAnswerOptionEntity</param>
		public CustomsAnswerOptionEntity(System.String id, IValidator validator)
		{
			InitClassEmpty(validator, null);
			this.Id = id;
		}

		/// <summary>Private CTor for deserialization</summary>
		/// <param name="info"></param>
		/// <param name="context"></param>
		protected CustomsAnswerOptionEntity(SerializationInfo info, StreamingContext context) : base(info, context)
		{
			// __LLBLGENPRO_USER_CODE_REGION_START DeserializationConstructor
			// __LLBLGENPRO_USER_CODE_REGION_END
		}

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entities of type 'CustomsUserAnswer' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCustomsUserAnswers() { return CreateRelationInfoForNavigator("CustomsUserAnswers"); }

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entity of type 'CustomsQuestion' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCustomsQuestion() { return CreateRelationInfoForNavigator("CustomsQuestion"); }
		
		/// <inheritdoc/>
		protected override EntityStaticMetaDataBase GetEntityStaticMetaData() {	return _staticMetaData; }

		/// <summary>Initializes the class members</summary>
		private void InitClassMembers()
		{
			PerformDependencyInjection();
			// __LLBLGENPRO_USER_CODE_REGION_START InitClassMembers
			// __LLBLGENPRO_USER_CODE_REGION_END

			OnInitClassMembersComplete();
		}

		/// <summary>Initializes the class with empty data, as if it is a new Entity.</summary>
		/// <param name="validator">The validator object for this CustomsAnswerOptionEntity</param>
		/// <param name="fields">Fields of this entity</param>
		private void InitClassEmpty(IValidator validator, IEntityFields2 fields)
		{
			OnInitializing();
			this.Fields = fields ?? CreateFields();
			this.Validator = validator;
			InitClassMembers();
			// __LLBLGENPRO_USER_CODE_REGION_START InitClassEmpty
			// __LLBLGENPRO_USER_CODE_REGION_END


			OnInitialized();
		}

		/// <summary>The relations object holding all relations of this entity with other entity classes.</summary>
		public static CustomsAnswerOptionRelations Relations { get { return _relationsFactory; } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CustomsUserAnswer' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCustomsUserAnswers { get { return _staticMetaData.GetPrefetchPathElement("CustomsUserAnswers", CommonEntityBase.CreateEntityCollection<CustomsUserAnswerEntity>()); } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CustomsQuestion' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCustomsQuestion { get { return _staticMetaData.GetPrefetchPathElement("CustomsQuestion", CommonEntityBase.CreateEntityCollection<CustomsQuestionEntity>()); } }

		/// <summary>The Content property of the Entity CustomsAnswerOption<br/><br/></summary>
		/// <remarks>Mapped on  table field: "customs_answer_option"."content".<br/>Table field type characteristics (type, precision, scale, length): Varchar, 0, 0, 1000.<br/>Table field behavior characteristics (is nullable, is PK, is identity): false, false, false</remarks>
		public virtual System.String Content
		{
			get { return (System.String)GetValue((int)CustomsAnswerOptionFieldIndex.Content, true); }
			set { SetValue((int)CustomsAnswerOptionFieldIndex.Content, value); }
		}

		/// <summary>The DetailRequired property of the Entity CustomsAnswerOption<br/><br/></summary>
		/// <remarks>Mapped on  table field: "customs_answer_option"."detail_required".<br/>Table field type characteristics (type, precision, scale, length): Boolean, 0, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): true, false, false</remarks>
		public virtual Nullable<System.Boolean> DetailRequired
		{
			get { return (Nullable<System.Boolean>)GetValue((int)CustomsAnswerOptionFieldIndex.DetailRequired, false); }
			set { SetValue((int)CustomsAnswerOptionFieldIndex.DetailRequired, value); }
		}

		/// <summary>The Id property of the Entity CustomsAnswerOption<br/><br/></summary>
		/// <remarks>Mapped on  table field: "customs_answer_option"."id".<br/>Table field type characteristics (type, precision, scale, length): Varchar, 0, 0, 40.<br/>Table field behavior characteristics (is nullable, is PK, is identity): false, true, false</remarks>
		public virtual System.String Id
		{
			get { return (System.String)GetValue((int)CustomsAnswerOptionFieldIndex.Id, true); }
			set { SetValue((int)CustomsAnswerOptionFieldIndex.Id, value); }
		}

		/// <summary>The QuestionId property of the Entity CustomsAnswerOption<br/><br/></summary>
		/// <remarks>Mapped on  table field: "customs_answer_option"."question_id".<br/>Table field type characteristics (type, precision, scale, length): Varchar, 0, 0, 40.<br/>Table field behavior characteristics (is nullable, is PK, is identity): true, false, false</remarks>
		public virtual System.String QuestionId
		{
			get { return (System.String)GetValue((int)CustomsAnswerOptionFieldIndex.QuestionId, true); }
			set { SetValue((int)CustomsAnswerOptionFieldIndex.QuestionId, value); }
		}

		/// <summary>Gets the EntityCollection with the related entities of type 'CustomsUserAnswerEntity' which are related to this entity via a relation of type '1:n'. If the EntityCollection hasn't been fetched yet, the collection returned will be empty.<br/><br/></summary>
		[TypeContainedAttribute(typeof(CustomsUserAnswerEntity))]
		public virtual EntityCollection<CustomsUserAnswerEntity> CustomsUserAnswers { get { return GetOrCreateEntityCollection<CustomsUserAnswerEntity, CustomsUserAnswerEntityFactory>("CustomsAnswerOption", true, false, ref _customsUserAnswers); } }

		/// <summary>Gets / sets related entity of type 'CustomsQuestionEntity' which has to be set using a fetch action earlier. If no related entity is set for this property, null is returned..<br/><br/></summary>
		[Browsable(false)]
		public virtual CustomsQuestionEntity CustomsQuestion
		{
			get { return _customsQuestion; }
			set { SetSingleRelatedEntityNavigator(value, "CustomsQuestion"); }
		}
		// __LLBLGENPRO_USER_CODE_REGION_START CustomEntityCode
		// __LLBLGENPRO_USER_CODE_REGION_END


	}
}

namespace App.Xuatnhapcanh.Dal
{
	public enum CustomsAnswerOptionFieldIndex
	{
		///<summary>Content. </summary>
		Content,
		///<summary>DetailRequired. </summary>
		DetailRequired,
		///<summary>Id. </summary>
		Id,
		///<summary>QuestionId. </summary>
		QuestionId,
		/// <summary></summary>
		AmountOfFields
	}
}

namespace App.Xuatnhapcanh.Dal.RelationClasses
{
	/// <summary>Implements the relations factory for the entity: CustomsAnswerOption. </summary>
	public partial class CustomsAnswerOptionRelations: RelationFactory
	{
		/// <summary>Returns a new IEntityRelation object, between CustomsAnswerOptionEntity and CustomsUserAnswerEntity over the 1:n relation they have, using the relation between the fields: CustomsAnswerOption.Id - CustomsUserAnswer.ChoiceId</summary>
		public virtual IEntityRelation CustomsUserAnswerEntityUsingChoiceId
		{
			get { return ModelInfoProviderSingleton.GetInstance().CreateRelation(RelationType.OneToMany, "CustomsUserAnswers", true, new[] { CustomsAnswerOptionFields.Id, CustomsUserAnswerFields.ChoiceId }); }
		}

		/// <summary>Returns a new IEntityRelation object, between CustomsAnswerOptionEntity and CustomsQuestionEntity over the m:1 relation they have, using the relation between the fields: CustomsAnswerOption.QuestionId - CustomsQuestion.Id</summary>
		public virtual IEntityRelation CustomsQuestionEntityUsingQuestionId
		{
			get	{ return ModelInfoProviderSingleton.GetInstance().CreateRelation(RelationType.ManyToOne, "CustomsQuestion", false, new[] { CustomsQuestionFields.Id, CustomsAnswerOptionFields.QuestionId }); }
		}

	}
	
	/// <summary>Static class which is used for providing relationship instances which are re-used internally for syncing</summary>
	internal static class StaticCustomsAnswerOptionRelations
	{
		internal static readonly IEntityRelation CustomsUserAnswerEntityUsingChoiceIdStatic = new CustomsAnswerOptionRelations().CustomsUserAnswerEntityUsingChoiceId;
		internal static readonly IEntityRelation CustomsQuestionEntityUsingQuestionIdStatic = new CustomsAnswerOptionRelations().CustomsQuestionEntityUsingQuestionId;

		/// <summary>CTor</summary>
		static StaticCustomsAnswerOptionRelations() { }
	}
}
